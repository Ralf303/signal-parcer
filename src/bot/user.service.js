import { Composer } from "telegraf";
import { Keyboard } from "telegram-keyboard";
import { getUser } from "../db/functions.js";
import text from "../../text.js";

const startKeyboard = Keyboard.make([
  [text.buttons.subscribe],
  [text.buttons.unsubscribe],
]);

const verifyKeyboard = Keyboard.make([
  [text.buttons.verify],
  [text.buttons.instruction],
]);

const userRouter = new Composer();

userRouter.start(async (ctx) => {
  try {
    const user = await getUser(ctx.from.id, ctx.from.username);

    if (!user.isVerified) {
      return await ctx.reply(
        `–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é,${ctx.from.first_name}!üëãüèª

–Ø RT AI TRADE BOT - ü§ñ –ò—Å–∫—É—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –∫–æ—Ç–æ—Ä—ã–π –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ä—ã–Ω–æ–∫ —Å –ø–æ–º–æ—â—å—é –±–æ–ª–µ–µ —á–µ–º 300 –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ –∏ –¥–∞–µ—Ç —Å–∏–≥–Ω–∞–ª—ã –Ω–∞ —Ä—ã–Ω–∫–µ –±–∏–Ω–∞—Ä–Ω—ã—Ö –æ–ø—Ü–∏–æ–Ω–æ–≤ –ø—Ä–æ—Ö–æ–¥–∏–º–æ—Å—Ç—å –∫–æ—Ç–æ—Ä—ã—Ö –±–æ–ª–µ–µ 85%

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∏–≥–Ω–∞–ª–æ–≤ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –ø—É–Ω–∫—Ç—ã:
1Ô∏è‚É£ –ü—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ –¥–∞–Ω–Ω–æ–π —Å—Å—ã–ª–∫–µüëá

https://bin.gd/lp/sure-start/?partner_id=p48422p145496pf7a5

2Ô∏è‚É£ –ü–æ–ø–æ–ª–Ω–∏—Ç–µ —Å–≤–æ–π –¥–µ–ø–æ–∑–∏—Ç 

3Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ‚Äú–ü–†–û–í–ï–†–ò–¢–¨ ID‚Äù.–î–∞–ª–µ–µ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π ID –∞–∫–∞—É–Ω—Ç–∞ –≤ —á–∞—Ç

4Ô∏è‚É£ –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏`,
        verifyKeyboard.reply()
      );
    }

    await ctx.reply(
      `–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, ${ctx.from.first_name}\n\n–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–∏–≥–Ω–∞–ª—ã: ${
        user.isSubscribe ? "‚úÖ" : "‚ùå"
      }\n–í–µ—Ä–µ—Ñ–∏–∫–∞—Ü–∏—è: ${user.isVerified ? "‚úÖ" : "‚ùå"}`,
      startKeyboard.reply()
    );
  } catch (error) {
    console.log(error);
  }
});

userRouter.hears(text.buttons.subscribe, async (ctx) => {
  try {
    const user = await getUser(ctx.from.id, ctx.from.username);

    if (user.isSubscribe) {
      await ctx.reply(text.alreadySubscribed);
      return;
    }

    if (!user.isVerified) {
      await ctx.replyWithHTML(text.needVerif);
      return;
    }

    await ctx.replyWithHTML(text.subscribed);
    user.isSubscribe = true;
    await user.save();
  } catch (error) {
    console.log(error);
  }
});

userRouter.hears(text.buttons.unsubscribe, async (ctx) => {
  try {
    const user = await getUser(ctx.from.id, ctx.from.username);

    if (!user.isVerified) {
      await ctx.replyWithHTML(text.needVerif);
      return;
    }

    await ctx.replyWithHTML(text.unverif);
    user.isSubscribe = false;
    await user.save();
  } catch (error) {
    console.log(error);
  }
});

userRouter.hears(text.buttons.verify, async (ctx) => {
  try {
    await ctx.scene.enter("verif");
  } catch (error) {
    console.log(error);
  }
});

userRouter.hears(text.buttons.instruction, async (ctx) => {
  try {
    await ctx.replyWithMediaGroup([
      {
        type: "photo",
        media: { source: "./img/photo1.jpg" },
        caption: `–î–ª—è –Ω–∞—á–∞–ª–∞ –≤–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è —Ç–µ–ª–µ—Ñ–æ–Ω –∏–ª–∏ –∫–æ–º–ø—å—é—Ç–µ—Ä –∏ —Ö–æ—Ä–æ—à–µ–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ,—è –ª–∏—á–Ω–æ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é –∫–æ–º–ø—å—é—Ç–µ—Ä,–Ω–æ –∫–æ–≥–¥–∞ –Ω–µ –¥–æ–º–∞ —Ç–æ—Ä–≥—É—é —Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞
–ù–∞—á–Ω–µ–º!üí∞

1Ô∏è‚É£–¢–æ—Ä–≥–æ–≤–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ bit.ly/BINARIUM_RU

–ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å–∞–π—Ç –±—Ä–æ–∫–µ—Ä–∞ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∞–∫–∫–∞—É–Ω—Çüëá

bit.ly/BINARIUM_RU

–í–≤–æ–¥–∏–º —Å–≤–æ—é –ø–æ—á—Ç—É,–ø—Ä–∏–¥—É–º—ã–≤–∞–µ–º –ø–∞—Ä–æ–ª—å –∏ –≤—ã–±–∏—Ä–∞–µ–º –≤–∞–ª—é—Ç—É –≤ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ–º –ø–æ–ø–æ–ª–Ω—è—Ç—å –±–∞–ª–∞–Ω—Å.–í –º–æ–µ–º —Å–ª—É—á–∞–µ - –†–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å:

2Ô∏è‚É£–î–∞–ª–µ–µ –≤–≤–æ–¥–∏–º —Å–≤–æ—ë –Ω–∞—Å—Ç–æ—è—â–µ–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é (—á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –ø—Ä–æ–±–ª–µ–º —Å –≤—ã–≤–æ–¥–æ–º) –∏ –Ω–æ–º–µ—Ä –≤–∞—à–µ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞.

3Ô∏è‚É£–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ—á—Ç—É (–Ω–∞ –≤–∞—à—É –ø–æ—á—Ç—É –ø—Ä–∏–¥–µ—Ç –ø–∏—Å—å–º–æ –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–π—Ç–∏) –∏ –≤—Å—ë, –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!üí™üèº 

4Ô∏è‚É£–û—Å—Ç–∞–ª–æ—Å—å —Ç–æ–ª—å–∫–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π ID –∞–∫–∞—É–Ω—Ç–∞ –±–æ—Ç—É –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É

<em>–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –º–æ–∂–Ω–æ –ª—é–±—ã–º —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º –±—É–¥—å —ç—Ç–æ –∫–∞—Ä—Ç–∞ –∏–ª–∏ –∫—Ä–∏–ø—Ç–∞</em>

5Ô∏è‚É£–ù–∞—Ö–æ–¥–∏–º —Å–≤–æ–π ID –∞–∫–∞—É–Ω—Ç–∞ –∏ –∑–∞–ø–æ–º–∏–Ω–∞–µ–º,–¥–∞–ª–µ–µ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –±–æ—Ç–∞ –∏ –Ω–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É ¬´–ü–†–û–í–ï–†–ò–¢–¨ ID‚Äù –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ –±–æ—Ç—É

<em>–î–∞–ª–µ–µ –æ–∂–∏–¥–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç –±–æ—Ç–∞ –∏ –ø–æ–ª—É—á–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã‚úÖ</em>`,
        parse_mode: "HTML",
      },
      {
        type: "photo",
        media: { source: "./img/photo2.jpg" },
      },
      {
        type: "photo",
        media: { source: "./img/photo3.jpg" },
      },
    ]);
  } catch (error) {
    console.log(error);
  }
});

export default userRouter;

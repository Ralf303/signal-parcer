import { Composer } from "telegraf";
import { Key, Keyboard } from "telegram-keyboard";
import { getUser } from "../db/functions.js";
import text from "../../text.js";

const startKeyboard = Keyboard.make([
  [text.buttons.subscribe],
  [text.buttons.unsubscribe],
]);

const verifyKeyboard = Keyboard.make([
  [text.buttons.verify],
  [text.buttons.instruction],
]);

const inlineKeyboard = Keyboard.inline([
  [Key.url("–ü–û–î–ü–ò–°–ê–¢–¨–°–Ø", "tg://settings")],
  ["‚úÖ–ü–û–î–ü–ò–°–ê–õ–°–Ø"],
]);

const registInlineKeyboard = Keyboard.inline([
  [Key.url("–ó–ê–†–ï–ì–ï–°–¢–†–ò–†–û–í–ê–¢–¨–°–Ø", "https://bit.ly/BINARIUM_RU")],
  ["‚úÖ–Ø –£–ñ–ï –ó–ê–†–ï–ì–ò–°–¢–†–ò–†–û–í–ê–ù "],
]);

const userRouter = new Composer();

userRouter.start(async (ctx) => {
  try {
    await ctx.reply(
      `–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ç–æ—Ä–≥–æ–≤–æ–º—É –±–æ—Ç—É RT AI TRADE,–Ω—É–∂–Ω–æ –±—ã—Ç—å –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º –Ω–∞ –º–æ–π –∫–∞–Ω–∞–ª`,
      inlineKeyboard
    );
  } catch (error) {
    console.log(error);
  }
});

userRouter.action("‚úÖ–ü–û–î–ü–ò–°–ê–õ–°–Ø", async (ctx) => {
  try {
    await ctx.reply(
      `‚ö°Ô∏è–¢–æ—Ä–≥—É–µ–º —Ç—É—Ç: https://bit.ly/BINARIUM_RU`,
      registInlineKeyboard
    );
    await ctx.deleteMessage();
  } catch (error) {
    console.log(error);
  }
});

userRouter.action("‚úÖ–Ø –£–ñ–ï –ó–ê–†–ï–ì–ò–°–¢–†–ò–†–û–í–ê–ù ", async (ctx) => {
  try {
    await ctx.reply(`üîó–í–æ—Ç –≤–∞—à–∞ —Å—Å—ã–ª–∫–∞ : 
–¢–æ—Ä–≥–æ–≤—ã–π –±–æ—Ç –¥–ª—è –≤–∞–ª—é—Ç–Ω—ã—Ö –ø–∞—Ä - https://t.me/+JjOnwUyDHhpkNzMx`);
    await ctx.deleteMessage();
  } catch (error) {
    console.log(error);
  }
});
// userRouter.hears(text.buttons.subscribe, async (ctx) => {
//   try {
//     const user = await getUser(ctx.from.id, ctx.from.username);

//     if (user.isSubscribe) {
//       await ctx.reply(text.alreadySubscribed);
//       return;
//     }

//     if (!user.isVerified) {
//       await ctx.replyWithHTML(text.needVerif);
//       return;
//     }

//     await ctx.replyWithHTML(text.subscribed);
//     user.isSubscribe = true;
//     await user.save();
//   } catch (error) {
//     console.log(error);
//   }
// });

// userRouter.hears(text.buttons.unsubscribe, async (ctx) => {
//   try {
//     const user = await getUser(ctx.from.id, ctx.from.username);

//     if (!user.isVerified) {
//       await ctx.replyWithHTML(text.needVerif);
//       return;
//     }

//     await ctx.replyWithHTML(text.unverif);
//     user.isSubscribe = false;
//     await user.save();
//   } catch (error) {
//     console.log(error);
//   }
// });

// userRouter.hears(text.buttons.verify, async (ctx) => {
//   try {
//     await ctx.scene.enter("verif");
//   } catch (error) {
//     console.log(error);
//   }
// });

// userRouter.hears(text.buttons.instruction, async (ctx) => {
//   try {
//     await ctx.replyWithMediaGroup([
//       {
//         type: "photo",
//         media: { source: "./img/photo1.jpg" },
//         caption: `–î–ª—è –Ω–∞—á–∞–ª–∞ –≤–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è —Ç–µ–ª–µ—Ñ–æ–Ω –∏–ª–∏ –∫–æ–º–ø—å—é—Ç–µ—Ä –∏ —Ö–æ—Ä–æ—à–µ–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ,—è –ª–∏—á–Ω–æ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é –∫–æ–º–ø—å—é—Ç–µ—Ä,–Ω–æ –∫–æ–≥–¥–∞ –Ω–µ –¥–æ–º–∞ —Ç–æ—Ä–≥—É—é —Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞
// –ù–∞—á–Ω–µ–º!üí∞

// 1Ô∏è‚É£–¢–æ—Ä–≥–æ–≤–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ bit.ly/BINARIUM_RU

// –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å–∞–π—Ç –±—Ä–æ–∫–µ—Ä–∞ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∞–∫–∫–∞—É–Ω—Çüëá

// bit.ly/BINARIUM_RU

// –í–≤–æ–¥–∏–º —Å–≤–æ—é –ø–æ—á—Ç—É,–ø—Ä–∏–¥—É–º—ã–≤–∞–µ–º –ø–∞—Ä–æ–ª—å –∏ –≤—ã–±–∏—Ä–∞–µ–º –≤–∞–ª—é—Ç—É –≤ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ–º –ø–æ–ø–æ–ª–Ω—è—Ç—å –±–∞–ª–∞–Ω—Å.–í –º–æ–µ–º —Å–ª—É—á–∞–µ - –†–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å:

// 2Ô∏è‚É£–î–∞–ª–µ–µ –≤–≤–æ–¥–∏–º —Å–≤–æ—ë –Ω–∞—Å—Ç–æ—è—â–µ–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é (—á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –ø—Ä–æ–±–ª–µ–º —Å –≤—ã–≤–æ–¥–æ–º) –∏ –Ω–æ–º–µ—Ä –≤–∞—à–µ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞.

// 3Ô∏è‚É£–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ—á—Ç—É (–Ω–∞ –≤–∞—à—É –ø–æ—á—Ç—É –ø—Ä–∏–¥–µ—Ç –ø–∏—Å—å–º–æ –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–π—Ç–∏) –∏ –≤—Å—ë, –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!üí™üèº

// 4Ô∏è‚É£–û—Å—Ç–∞–ª–æ—Å—å —Ç–æ–ª—å–∫–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π ID –∞–∫–∞—É–Ω—Ç–∞ –±–æ—Ç—É –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É

// <em>–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –º–æ–∂–Ω–æ –ª—é–±—ã–º —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º –±—É–¥—å —ç—Ç–æ –∫–∞—Ä—Ç–∞ –∏–ª–∏ –∫—Ä–∏–ø—Ç–∞</em>

// 5Ô∏è‚É£–ù–∞—Ö–æ–¥–∏–º —Å–≤–æ–π ID –∞–∫–∞—É–Ω—Ç–∞ –∏ –∑–∞–ø–æ–º–∏–Ω–∞–µ–º,–¥–∞–ª–µ–µ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –±–æ—Ç–∞ –∏ –Ω–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É ¬´–ü–†–û–í–ï–†–ò–¢–¨ ID‚Äù –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ –±–æ—Ç—É

// <em>–î–∞–ª–µ–µ –æ–∂–∏–¥–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç –±–æ—Ç–∞ –∏ –ø–æ–ª—É—á–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã‚úÖ</em>`,
//         parse_mode: "HTML",
//       },
//       {
//         type: "photo",
//         media: { source: "./img/photo2.jpg" },
//       },
//       {
//         type: "photo",
//         media: { source: "./img/photo3.jpg" },
//       },
//     ]);
//   } catch (error) {
//     console.log(error);
//   }
// });

export default userRouter;
